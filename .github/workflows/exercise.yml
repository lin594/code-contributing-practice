name: Exercise
on:
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  contents: read

jobs:
  exercise1:
  # create a new issue and assign it to who commented
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.number == 1 && ( github.event.comment.body == '1' || github.event.comment.body == '认领' || github.event.comment.body == '我来' || github.event.comment.body == 'OK' || github.event.comment.body == 'test' || github.event.comment.body == 'Test' ) }}
    steps:
    - uses: actions/checkout@v3
    - name: Create new issue
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: Exercise 1 for ${{ github.event.comment.user.login }}
        content-filepath: .github/ISSUE_TEMPLATE/exercise1.md
        assignees: ${{ github.event.comment.user.login }}
        labels: exercise1
    - name: Delete comment
      uses: detomarco/delete-comments@v1.0.4
      with:
        comment-id: ${{ github.event.comment.id }}
        token: ${{ secrets.GITHUB_TOKEN }}
  
  exercise2:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.number == 5 && ( github.event.comment.body == '1' || github.event.comment.body == '认领' || github.event.comment.body == '我来' || github.event.comment.body == 'OK' || github.event.comment.body == 'test' || github.event.comment.body == 'Test' ) }}
    steps:
    - uses: actions/checkout@v3
    - name: Create new issue
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: Exercise 2 for ${{ github.event.comment.user.login }}
        content-filepath: .github/ISSUE_TEMPLATE/exercise2.md
        assignees: ${{ github.event.comment.user.login }}
        labels: exercise2
    - name: Delete comment
      uses: detomarco/delete-comments@v1.0.4
      with:
        comment-id: ${{ github.event.comment.id }}
        token: ${{ secrets.GITHUB_TOKEN }}